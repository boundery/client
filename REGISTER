XXX Merge into ../notes/signup_flow.org

1) Client writes SSID/pairingkey/seed_entropy to SDcard
2) Client is directed to "centralui/accounts/client_enroll/"
3) Client is redirected to "centralui/accounts/signup/"
4) Client creates account, solves captcha
5) Client clicks confirmation email, ends up back at "/client_enroll/"
6) Client is redirected back to client http, passing client.apikey/username
7) Client pops up elevate dialog, joins temporary public ZT network
8) Server registers with Central, posting it's temp ipv6 addr, subkey("pairing_id")
9) Client asks centralui for server bootstrap ipv6 addr using subkey("pairing_id")
10) Client encrypts ZT nodeid with secret key and sends via ZT temp network
11) Server decrypts nodeid and preauths it on the private ZT network
12) Server encrypts private ZT networkid and sends to client
13) Client decrypts networkid and joins it
14) Client contacts server over ZT private network.

XXX How to re-enroll w/ centralui/os if only client gets wiped?
XXX Namespace subkeys.
XXX Better names for various subkeys (and pairing_key->rootkey)
XXX Better names for various APIKEYs...
XXX Change from recaptcha+email to recaptcha or email?  Or just use an invite tree?

CHANGES FOR WIREGUARD:
 - Change temp ZT ipv6 addr to server public IP address, maybe reuse dyndns?
 - Preshare wireguard peer info by generating it all from root key.

CLIENT writes SSID/wifipw/pairingkey/seed_entropy to SDcard
CLIENT redirected to centralui
CLIENT creates account -- either email+captcha, or invite code
CLIENT redirects back to local, carrying client.apikey/username
CLIENT polls central for server info
CLIENT gets server info, decrypts, creates wireguard tunnel (using private IP or dyndns IP?)
CLIENT contacts server over wireguard tunnel.

SERVER boots up, generates rootkey
SERVER creates wireguard server
SERVER generates bootstrap client wireguard config
SERVER registers with centralui, writes encrypted privateIP/routerIP/routerMAC/client_wg0.conf

V2:
CLIENT writes SSID/wifipw/pairingkey/seed_entropy to SDcard
CLIENT sends uesrname/invite_id to central, gets CAPIKEY
CLIENT polls central for server info
CLIENT gets server info, decrypts, creates wireguard tunnel w/ dyndns IP.
CLIENT contacts server over wireguard tunnel.

SERVER boots up, adds seed_entropy, generates rootkey
SERVER creates wireguard server
SERVER generates bootstrap client wireguard config
SERVER registers with centralui, writes encrypted privateIP/routerIP/routerMAC/client_wg0.conf
SERVER waits for contact from client via wireguard.
